{"version":3,"sources":["menu/SimpleMenu.js","demo/FormatJson/FormatJson.js","demo/Modal/ConfirmModal.js","service/data-service.js","demo/ManageData/ViewItem.js","demo/Alert/AutoFocusAlert.js","demo/EditRawJson/EditRawJson.js","demo/DynamicForm/DynamicFormChild.js","demo/DynamicForm/SchemaForm.js","demo/DynamicForm/EditCustomForm.js","demo/ManageData/ManageList.js","demo/ManageForms/formCatalog.js","demo/ManageForms/ManageForms.js","demo/ManageData/ManageData.js","demo/DynamicForm/data.js","demo/DynamicForm/JsonFormExample.js","App.js","index.js"],"names":["SimpleMenu","props","menuListe","state","menuItemText","menuKey","window","location","pathname","console","log","menu","find","element","className","icons","rabbitFace","rabbit","Dropdown","Toggle","variant","id","Menu","this","map","v","index","Item","href","onClick","key","PureComponent","FormatJson","handleFormChange","ev","change","target","name","value","setState","formatJson","obj","JSON","parse","jsonContent","err","formattedObject","Form","Group","controlId","Label","Control","as","row","placeholder","onChange","Button","displayDataTypes","src","ConfirmModal","Modal","show","onHide","handleClose","animation","size","backdrop","Header","closeButton","Title","title","Body","children","handleConfirm","Footer","baseUrl","findItems","searchText","a","url","path","fetch","res","json","findItemById","deleteItemById","method","mode","saveItem","item","headers","Headers","body","stringify","content","jsonInvalide","nonJsonData","getTimeStamp","format","mm","d","Date","getMonth","dd","getDate","hh","getHours","mi","getMinutes","ss","getSeconds","getFullYear","join","ViewItem","getFormattedObject","data","r","success","error","then","length","Alert","type","description","AutoFocusAlert","refAlert","React","createRef","scrollToVisible","alert","current","scrollIntoView","alertVariant","ref","EditRawJson","save","showInfo","callbackRefresh","status","showSuccess","message","showError","adjustRows","str","lines","split","Math","min","showWarn","msg","ready","itemId","idReadOnly","objectType","InputGroup","Prepend","Text","aria-describedby","disabled","Boolean","rows","DynamicFormChild","refreshCount","schema","onSubmit","onError","formData","showErrorList","SchemaForm","dependencies","EditCustomForm","prefillForm","listResult","chg","Object","entries","k","dataToSave","dataForRJSF","adaptFormDefinition","Promise","reject","loadSchema","form","resolve","properties","transformToSave","listFields","assign","required","forEach","propOriginal","i","prop","fieldName","booleanRequired","push","enum","enumValues","s","trim","jsonOriginal","getOwnPropertyNames","includes","e","stack","varient","param","catch","suggestedId","initialDescription","initialData","collapsed","ManageList","refresh","filter","sort","b","localeCompare","notifyResultList","askConfirmDelete","itemToDelete","confirmDelete","cancelDelete","itemToShow","editCustomForm","customFormParam","editRawJson","itemToEditAsRawJson","needRefresh","notifyRefresh","conditionalRefresh","prevProps","Table","striped","bordered","hover","showType","plus","gear","memo","pencil","magnifyingGlass","wastebasket","formCatalog","movieTitle","movieGenre","mainActors","task","done","quantity","ManageForms","createForm","closeCreationModal","ManageData","formList","select","getAttribute","undefined","selectedIndex","getSelectedForm","data-index","style","color","myData","JsonFormExample","items","no","releaseDate","numEpisodes","App","selectedMenu","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33e30a54.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport icons from 'glyphicons';\r\n\r\n\r\nclass SimpleMenu extends PureComponent {\r\n\r\n  menuListe = [\r\n            [\"ManageData\" ,\"Manage your data\"],\r\n            [\"ManageForms\"   ,\"Manage your forms\"],\r\n\r\n            [\"FormatJson\" , \"Example : How to format Json\"],\r\n            [\"JsonFormExample\" ,\"Example : Dynamic form\"],\r\n  ];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n       menuItemText : \"\"\r\n    };\r\n\r\n    let menuKey =  window.location.pathname;\r\n    console.log('window.location', window.location);\r\n    \r\n    let menu = this.menuListe.find(element => '/'+element[0] === menuKey );\r\n    if(menu) {\r\n      this.state.menuItemText = menu[1];\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (<div className=\"container\">\r\n\r\n      <div className=\"row\">\r\n        \r\n        {icons.rabbitFace}\r\n        Welcome !!\r\n        {icons.rabbit}\r\n\r\n        <Dropdown className=\"px-2\">\r\n          <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n            Menu\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            { this.menuListe.map ( (v,index) => \r\n              <Dropdown.Item href=\"#\" onClick={ () => window.location.href='/'+v[0]} \r\n                   key={v[0]}>{v[1]}</Dropdown.Item>\r\n            )}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n         <header>{this.state.menuItemText}</header>\r\n      </div>\r\n    </div>);\r\n  }\r\n}\r\nexport default SimpleMenu;\r\n","import React, { PureComponent } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ReactJson from 'react-json-view';\r\n\r\nclass FormatJson extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t\tformattedObject : {},\r\n\t\tjsonContent : `{ \"value\" : \"3\" }`\r\n    };\r\n  }\r\n\r\n  handleFormChange = (ev) => {\r\n\t  var change = {};\r\n      change[ev.target.name] = ev.target.value;\r\n\t  this.setState(change);\r\n\t  console.log('handleFormChange', change);\r\n  }\r\n\r\n  formatJson = () => {\r\n\r\n\t  var obj = {};\r\n\t  try {\r\n\t\t obj = JSON.parse(this.state.jsonContent);\r\n\t  } catch(err) {\r\n\t\t  obj = {\r\n\t\t\t  err : (''+err)\r\n\t\t  };\r\n\t  }\r\n\t  this.setState( {\r\n\t\t  formattedObject : obj\r\n\t  });\r\n\t  console.log('formatJson', obj);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"px-2\" >\r\n\r\n\t\t<Form>\r\n\r\n\t\t\t<Form.Group controlId=\"jsonContent\">\r\n\t\t\t\t<Form.Label>Json content</Form.Label>\r\n\t\t\t\t<Form.Control as=\"textarea\" row=\"5\"\r\n\t\t\t\t\tname=\"jsonContent\"\r\n\t\t\t\t\tplaceholder={ `{ \"value\" : \"3\" }` }\r\n\t\t\t\t\tonChange={this.handleFormChange}\r\n\t\t\t\t\tvalue={this.state.jsonContent}  />\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Button variant=\"primary\"  onClick={this.formatJson} >\r\n\t\t\t\tFormat\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\r\n        <div className=\"py-2\" >\r\n\t      <ReactJson displayDataTypes={false} src={this.state.formattedObject} />\r\n\t\t</div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FormatJson;","import React from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function ConfirmModal(props) {\r\n\r\n  return (\r\n    <>\r\n      <Modal show={props.show} onHide={props.handleClose} animation={true} size={props.size}\r\n            backdrop=\"static\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.title? props.title : 'Confirmation'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{props.children}</Modal.Body>\r\n        { props.handleConfirm &&\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={props.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={props.handleConfirm}>\r\n              Confirm\r\n            </Button>\r\n          </Modal.Footer>\r\n        }\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","\nvar baseUrl = \n  // 'http://localhost:1234/'; \n     'https://generic-db.glitch.me/';\n\n/**\n * ex searchText='type=FORM'\n */\nexport async function findItems(searchText) {\n  console.log(`filter with ${searchText}`);\n\n  let path = 'items' + (searchText? '?'+searchText : '');\n  let url = baseUrl + path;\n  let res = await fetch(url);\n\n  let json = await res.json();\n  console.log(path +' => ', json);\n\n  return json;\n};\n\nexport async function findItemById(id) {\n  console.log(`find by id ${id}`);\n\n  let path = 'items/' +id;\n  let url = baseUrl + path;\n  let res = await fetch(url);\n\n  let json = await res.json();\n  console.log(path +' => ', json);\n\n  return json;\n};\n\n\nexport async function deleteItemById(id) {\n  console.log(`delete by id ${id}`);\n\n  let path = 'items/' +id+ '/delete';\n  let url = baseUrl + path;\n  let res = await fetch(url, {\n    method: 'DELETE',\n    mode: 'cors',\n  });\n\n  let json = await res.json();\n  console.log(path +' => ', json);\n\n  return json;\n};\n\n\n\nexport async function saveItem(item) {\n  console.log(`save`, item);\n\n  let path = 'items/save';\n  let url = baseUrl + path;\n  let res = await fetch(url,  {\n    method: 'POST',\n    headers: new Headers({\n      \"Content-Type\": \"application/json\",\n    }),\n    body: JSON.stringify(item)\n  });\n\n  let json = await res.json();\n  console.log(path +' => ', json);\n\n  return json;\n};\n\n\nexport function formatJson(content) {\n\t  let obj;\n\t  if(!content) {\n\t\t  return null;\n\t  }\n\t  try {\n\t\t  obj = JSON.parse(content);\n\t  } catch(err) {\n\t\t  console.log('json invalide', err);\n\t\t  obj = {\n\t\t\t  jsonInvalide : (''+err)\n\t\t  };\n\t  }\n\t  console.log('formatJson', obj);\n\t  return (typeof obj === 'object')? obj : {\n\t\t  nonJsonData : ''+obj\n\t  };\n  };\n\nexport function getTimeStamp() {\n\t\tlet format = (mm) => (mm>9 ? '' : '0') + mm;\n\t\tlet d = new Date();\n\t\tvar mm = d.getMonth() + 1; // getMonth() is zero-based\n\t\tvar dd = format(d.getDate());\n\t\tvar hh = format(d.getHours());\n\t\tvar mi = format(d.getMinutes());\n\t\tvar ss = format(d.getSeconds());\n\t\treturn [d.getFullYear(),\n\t\t\t\tmm,\n\t\t\t\tdd,\n\t\t\t\t'_',\n\t\t\t\thh,\n\t\t\t\tmi,\n\t\t\t\tss,\n\t\t\t\t].join('')\n\t};\n","import React, { PureComponent } from \"react\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport ReactJson from 'react-json-view';\r\nimport { findItemById } from '../../service/data-service';\r\n\r\nclass ViewItem extends PureComponent {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\t// item id : props.item \r\n    this.state = {\r\n\t\tsuccess : '',\r\n\t\terror : ''\r\n\t};\r\n\tfindItemById(props.item).then(\r\n\t\t(data) => {\r\n\t\t\tif(data.length>0) {\r\n\t\t\t\tthis.setState( {\r\n\t\t\t\t\tdata : data[0],\r\n\t\t\t\t\terror : ''\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState( {error : 'Error : not found'});\r\n\t\t\t}\r\n\t\t}, \r\n\t\t(err) => {\r\n\t\t\tthis.setState( {error : 'Error while loading : ' +err});\r\n\t\t}\r\n\t);\r\n  }\r\n\r\n\r\n  getFormattedObject = () => {\r\n\t  console.log('data', this.state.data);\r\n\t  let content = this.state.data.content;\r\n\t  try {\r\n\t\tlet r = JSON.parse(content);\r\n\t\tif(r && typeof r === 'object') {\r\n\t\t\tconsole.log('result', r);\r\n\t\t\treturn r;\r\n\t\t}\r\n\t  } catch(err) {\r\n\t\t  console.log(err);\r\n\t  }\r\n\t  return { \"content_non_json\" : content };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"px-2\" >\r\n\r\n\t\t{ this.state.success &&\r\n\t\t\t<Alert variant='success' >\r\n\t\t\t\t{this.state.success}\r\n\t\t\t</Alert>\r\n\t\t}\r\n\t\t{ this.state.error &&\r\n\t\t\t<Alert variant='danger' >\r\n\t\t\t\t{this.state.error}\r\n\t\t\t</Alert>\r\n\t\t}\r\n\t\t{ this.state.data && \r\n\t\t\t<>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\tType : {this.state.data.type}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\tDescription : {this.state.data.description}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"py-2\" >\r\n\t\t\t<ReactJson displayDataTypes={false} src={this.getFormattedObject()} />\r\n\t\t\t</div>\r\n\t\t\t</>\r\n  \t\t}\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default ViewItem;","import React, { PureComponent } from \"react\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nclass AutoFocusAlert extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.refAlert = React.createRef();    \r\n  }\r\n  componentDidMount() {\r\n    this.scrollToVisible(); \r\n  }\r\n  componentDidUpdate() {\r\n    this.scrollToVisible();\r\n  }\r\n\r\n  scrollToVisible() {\r\n    if(this.props.alert && this.refAlert) {\r\n\t\t\tthis.refAlert.current.scrollIntoView();\r\n\t\t\t// console.log('scrollIntoView', this.refAlert.current);\r\n\t\t}\r\n  }\r\n\r\n\r\n  render() {\r\n    return \t<>\t\t\r\n      { this.props.alert &&\r\n\t\t\t\t<Alert variant={this.props.alertVariant} ref={this.refAlert} >\r\n\t\t\t\t\t{this.props.alert}\r\n\t\t\t\t</Alert>\r\n\t\t\t}\r\n      </>;\r\n  }\r\n}\r\nexport default AutoFocusAlert;\r\n  \r\n  ","import React, { PureComponent } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport AutoFocusAlert from '../Alert/AutoFocusAlert';\r\nimport ReactJson from 'react-json-view';\r\nimport { findItemById, saveItem, formatJson } from '../../service/data-service';\r\n\r\nclass EditRawJson extends PureComponent {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.state = { \r\n\t\t\talert : 'Loading...',\r\n\t\t\talertVariant : 'info'\r\n\t};\r\n }\r\n\r\n componentDidMount() {\r\n\tif(this.props.itemId) {\r\n\t\tfindItemById(this.props.itemId).then(\r\n\t\t\t(data) => {\r\n\t\t\t\tif(data.length>0) {\r\n\t\t\t\t\tlet formattedObject = formatJson(data[0].content);\r\n\t\t\t\t\tthis.setState( {\r\n\t\t\t\t\t\t...data[0],\r\n\t\t\t\t\t\tidReadOnly : true,\r\n\t\t\t\t\t\tformattedObject,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.showSuccess('');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.showError('Error : not found');\r\n\t\t\t\t}\r\n\t\t\t}, \r\n\t\t\t(err) => {\r\n\t\t\t\tthis.showError('Error while loading : ' +err);\r\n\t\t\t}\r\n\t\t);\r\n\t} else {\r\n\t\t// if ID not provided,\r\n\t\t// we show emptyForm.\r\n\t\tlet content = '';\r\n\t\tthis.setState({\r\n\t\t\tformattedObject : formatJson(content),\r\n\t\t\tid : '',\r\n\t\t\tdescription : '',\r\n\t\t\tcontent : content,\r\n\t\t\ttype : this.props.objectType,\r\n\t\t});\r\n\t\tthis.showSuccess('');\r\n\t}\r\n  }\r\n\r\n  handleFormChange = (ev) => {\r\n\t  let change = {};\r\n      change[ev.target.name] = ev.target.value;\r\n\t  this.setState(change);\r\n\t  // console.log('handleFormChange', change);\r\n  }\r\n\r\n  save = async () => {\r\n\ttry {\r\n\t  this.showInfo('Saving...');\r\n\t  let obj = formatJson(this.state.content);\r\n\t  let res = await saveItem({\r\n\t\tid : this.state.id,\r\n\t\ttype : this.state.type,\r\n\t\tdescription : this.state.description,\r\n\t\tcontent : this.state.content\r\n\t  });\r\n\t  // console.log('result', res);\r\n\t  if(this.props.callbackRefresh) {\r\n\t\t  this.props.callbackRefresh();\r\n\t  }\r\n\t  this.setState( {\r\n\t\t  formattedObject : obj\r\n\t  });\r\n\t  if(res.status==='OK') {\r\n\t\tthis.showSuccess(res.message);\r\n\t  } else {\r\n\t\tthis.showError(res.message);\r\n\t  }\r\n\t} catch(err) {\r\n\t  console.log(err);\r\n\t  this.showError('Error ' +err);\r\n\t}\r\n  };\r\n\r\n\r\n\r\n  adjustRows = (str) => {\r\n\tif(!str) return 3;\r\n\tlet lines = str.split('\\n');\r\n\treturn Math.min(lines.length + 1, 10);\r\n  }\r\n\r\n\tshowError = (err) => {\r\n\t\t\tthis.setState({ alert: err, alertVariant : 'danger'});\r\n\t};\r\n\tshowWarn = (msg) => {\r\n\t\t\tthis.setState({ alert: msg, alertVariant : 'warning' });\r\n\t};\r\n\tshowSuccess = (msg) => {\r\n\t\t\tthis.setState({ alert: msg, alertVariant : 'success', ready : true});\r\n\t};\r\n\tshowInfo = (msg) => {\r\n\t\t\tthis.setState({  alert: msg, alertVariant : 'info' });\r\n\t};\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"px-2\" >\r\n\r\n\t\t<AutoFocusAlert alert={this.state.alert} alertVariant={this.state.alertVariant} >\r\n\t\t</AutoFocusAlert>\r\n\r\n\t\t{ this.state.ready &&\r\n\t\t\t<>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Text id=\"fieldLabel-id\">Unique ID</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\tname=\"id\"\r\n\t\t\t\t\t\t\tvalue={this.state.id}\r\n\t\t\t\t\t\t\tplaceholder=\"required\"\r\n\t\t\t\t\t\t\tonChange={this.handleFormChange}\r\n\t\t\t\t\t\t\taria-describedby=\"fieldLabel-id\"\r\n\t\t\t\t\t\t\tdisabled={Boolean(this.state.idReadOnly)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputGroup>\r\n\r\n\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Text id=\"fieldLabel-description\">Description</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\tvalue={this.state.description? this.state.description : ''}\r\n\t\t\t\t\t\t\tplaceholder=\"describe your data\"\r\n\t\t\t\t\t\t\tonChange={this.handleFormChange}\r\n\t\t\t\t\t\t\taria-describedby=\"fieldLabel-description\" />\r\n\t\t\t\t\t</InputGroup>\r\n\r\n\t\t\t\t\t<Form.Group controlId=\"content\">\r\n\t\t\t\t\t\t<Form.Label>Json content</Form.Label>\r\n\t\t\t\t\t\t<Form.Control as=\"textarea\" \r\n\t\t\t\t\t\t\tname=\"content\"\r\n\t\t\t\t\t\t\trows={this.adjustRows(this.state.content)}\r\n\t\t\t\t\t\t\tplaceholder={ `{ \"value\" : \"3\" }` }\r\n\t\t\t\t\t\t\tonChange={this.handleFormChange}\r\n\t\t\t\t\t\t\tvalue={this.state.content? this.state.content : ''}  />\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Button variant=\"primary\"  onClick={this.save} >\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\r\n\t\t\t\t{this.state.formattedObject && \r\n\t\t\t\t\t<div className=\"py-2\" >\r\n\t\t\t\t\t\t<div>Json view</div>\r\n\t\t\t\t\t\t<ReactJson displayDataTypes={false} src={this.state.formattedObject} />\r\n\t\t\t\t\t</div>\r\n  \t\t\t\t}\r\n\t\t\t</>\r\n  \t\t}\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default EditRawJson;","import React, { PureComponent } from \"react\";\r\nimport CustomForm from \"@rjsf/core\";\r\n\r\nclass DynamicFormChild extends PureComponent {\r\n\r\n  constructor(props) {\r\n\t  super(props);\r\n\t  this.refreshCount = 0;\r\n  }\r\n\r\n  render() {\r\n\tthis.refreshCount++;\r\n\tconsole.log('DynamicFormChild render', this.refreshCount);\r\n\r\n\treturn (\r\n\t\t\t\t\t\t<CustomForm schema={this.props.schema}\r\n\t\t\t\t\t\t\t\tonSubmit={this.props.onSubmit}\r\n\t\t\t\t\t\t\t\tonError={this.props.onError} \r\n\t\t\t\t\t\t\t\tformData={this.props.formData}\r\n\t\t\t\t\t\t\t\tshowErrorList={false} \t>\r\n\t\t\t\t\t\t</CustomForm>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default DynamicFormChild;","/* meta schema for defining a form */\r\nconst SchemaForm = {\r\n\t\"title\": \"Let's define a simple form\",\r\n    \"description\": \"To create a complex form, use the 'raw JSON editor'\",\r\n\t\"type\": \"object\",\r\n\t\"properties\": {\r\n\t\t\"title\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"default\": \"Title of your form\",\r\n\t\t\t\"title\" : \"Give your form a title\"\r\n\t\t},\r\n\t\t\"listFields\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"title\" : \"Manage the fields\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"type\" : \"object\", \r\n\t\t\t\t\"required\": [\r\n\t\t\t\t\t\"fieldName\",\r\n\t\t\t\t\t\"type\"\r\n\t\t\t\t], \r\n\t\t\t\t\"properties\" : {\r\n\t\t\t\t\t\"fieldName\" : {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"title\" : \"Techinical field name\",\r\n\t\t\t\t\t\t\"pattern\": \"^[A-Za-z0-9_-]{0,30}$\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"type\" : {\r\n\t\t\t\t\t\t\"enum\": [\"string\",\"integer\", \"boolean\", \"date\", \"enum\"],\r\n\t\t\t\t\t\t\"default\" : \"string\",\r\n\t\t\t\t\t\t\"title\" : \"Data type\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"title\" : {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"title\" : \"Title to show in the form\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"booleanRequired\" : {\r\n\t\t\t\t\t\t\"type\": \"boolean\",\r\n\t\t\t\t\t\t\"title\" : \"Required?\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tdependencies : {\r\n\t\t\t\t\t\"type\" : {\r\n\t\t\t\t\t\t\"oneOf\": [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": {\"enum\": [\"enum\"]},\r\n\t\t\t\t\t\t\t\t\t\t\"enumValues\" : {\r\n\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\ttitle : \"Enum values (comma separated)\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": {\"enum\": [\"string\",\"integer\", \"boolean\", \"date\"]}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n};\r\n\r\nexport default SchemaForm;","import React, { PureComponent } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport AutoFocusAlert from '../Alert/AutoFocusAlert';\r\nimport ReactJson from 'react-json-view';\r\nimport { findItemById, saveItem, formatJson } from '../../service/data-service';\r\nimport DynamicFormChild from './DynamicFormChild';\r\nimport SchemaForm from './SchemaForm';\r\n\r\nclass EditCustomForm extends PureComponent {\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t// item id : props.item \r\n\t\tthis.state = {\r\n\t\t\talert : 'Loading...',\r\n\t\t\tvarient : 'info'\r\n\t\t};\r\n\t\tthis.idReadOnly = Boolean(props.param.id);\r\n\t\tthis.dataForRJSF = {};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// the call 'setState' is available after 'mount.\r\n\t\tif(this.props.param.id) {\r\n\t\t\tconsole.log('create an prefield form');\r\n\t\t\tthis.prefillForm(this.props.param.id)\r\n\t\t\t.then(()=> { \r\n\t\t\t\tthis.showSuccess()\r\n\t\t\t}).catch((e)=> this.showError('Error while loading : '+e));\r\n\t\t} else {\r\n\t\t\tconsole.log('create an empty form');\r\n\t\t\tthis.loadSchema(this.props.param.form)\r\n\t\t\t.then((form)=> {\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\tid : this.props.param.suggestedId,\r\n\t\t\t\t\ttype : form.id,\r\n\t\t\t\t\tdescription : this.props.param.initialDescription? this.props.param.initialDescription : null,\r\n\t\t\t\t\tdataToSave : this.props.param.initialData? this.props.param.initialData : null \r\n\t\t\t\t});\r\n\t\t\t\tthis.dataForRJSF = this.adaptFormDefinition(this.props.param.initialData, form.id);\r\n\t\t\t\treturn this.showSuccess();\r\n\t\t\t})\r\n\t\t\t.catch((e)=> {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tthis.showError('Error while loading : '+e)} );\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n   prefillForm = async (id) => {\r\n\t\treturn findItemById(id).then(\r\n\t\t\t\t(listResult) => {\r\n\t\t\t\t\tif(listResult.length>0) {\r\n\t\t\t\t\t\tlet item = listResult[0];\r\n\t\t\t\t\t\tlet chg = {};\r\n\t\t\t\t\t\tfor (let [k, v] of Object.entries(item)) {\r\n\t\t\t\t\t\t\tif(k==='content') {\r\n\t\t\t\t\t\t\t\tlet d = formatJson(v);\r\n\t\t\t\t\t\t\t\tchg.dataToSave = d;\r\n\t\t\t\t\t\t\t\tthis.dataForRJSF = this.adaptFormDefinition(d, item.type);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tchg[k] = v;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log('setState',chg);\r\n\t\t\t\t\t\tthis.setState(chg);\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn Promise.reject(`ID ${id} not found `);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t).then(\r\n\t\t\t(item) => this.loadSchema(item.type)\r\n\t\t);\r\n\t};\r\n\r\n\tloadSchema = async (form) => {\r\n\t\tif(form === 'FORM') {\r\n\t\t\tthis.setState({schema : SchemaForm});\r\n\t\t\tconsole.log('use SchemaForm', SchemaForm);\r\n\t\t\treturn Promise.resolve({id:'FORM', description:'meta schema', schema : SchemaForm });\r\n\t\t}\r\n\t\treturn findItemById(form).then(\r\n\t\t\t\t(listResult) => {\r\n\t\t\t\t\tif(listResult.length>0) {\r\n\t\t\t\t\t\tlet item = listResult[0];\r\n\t\t\t\t\t\tif(item.type!=='FORM') {\r\n\t\t\t\t\t\t\treturn Promise.reject(`Object ID ${form} must be of type FORM (found ${item.type})`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet schema = formatJson(item.content);\r\n\t\t\t\t\t\tif(!schema || !schema.properties) {\r\n\t\t\t\t\t\t\treturn Promise.reject(`Form '${form}' has invalide schema (found ${item.content})`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.setState({schema});\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn Promise.reject(`Form '${form}' not found `);\r\n\t\t\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tshowError = (err) => {\r\n\t\t\tthis.setState({ alert: err, alertVariant : 'danger'});\r\n\t};\r\n\tshowWarn = (msg) => {\r\n\t\t\tthis.setState({ alert: msg, alertVariant : 'warning' });\r\n\t};\r\n\tshowSuccess = (msg) => {\r\n\t\t\tthis.setState({ alert: msg, alertVariant : 'success', ready : true});\r\n\t};\r\n\tshowInfo = (msg) => {\r\n\t\t\tthis.setState({  alert: msg, alertVariant : 'info' });\r\n\t};\r\n\r\n\thandleFormChange = (ev) => {\r\n\t\tlet change = {};\r\n\t\tchange[ev.target.name] = ev.target.value;\r\n\t\tthis.setState(change);\r\n\t\t// console.log('handleFormChange', change);\r\n\t};\r\n\r\n\t\r\n    onSubmit = async (data) => {\r\n\t\ttry {\r\n\t\t\tconsole.log('submit', data);\r\n\t\t\tthis.showInfo('Saving...');\r\n\t\t\tlet dataToSave = this.transformToSave(data.formData);\r\n\t\t\tthis.setState({dataToSave});\r\n\t\t\tlet content = JSON.stringify(dataToSave, null, ' ');\r\n\t\t\tlet res = await saveItem({\r\n\t\t\t\tid : this.state.id,\r\n\t\t\t\ttype : this.state.type,\r\n\t\t\t\tdescription : this.state.description,\r\n\t\t\t\tcontent : content\r\n\t\t\t});\r\n\t\t\t// console.log('result', res);\r\n\t\t\tif(res.status==='OK') {\r\n\t\t\t\tthis.showSuccess(res.message);\r\n\t\t\t} else {\r\n\t\t\t\tthis.showError(res.message);\r\n\t\t\t}\r\n\t\t\tif(res.status==='OK' && this.props.callbackRefresh) {\r\n\t\t\t\tthis.props.callbackRefresh();\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.showError('' +err);\r\n\t\t}\r\n\r\n\t};\r\n\r\n\ttransformToSave = (json) => {\r\n\t\tif(this.state.type!=='FORM') {\r\n\t\t\treturn json;\r\n\t\t}\r\n\t\t// transform 'listFields' to 'properties'\r\n\t\tif(!json.listFields) {\r\n\t\t\treturn json;\r\n\t\t}\r\n\t\tjson = Object.assign({}, json);\r\n\t\tjson.type = 'object';\r\n\t\tjson.properties = {};\r\n\t\tjson.required = [];\r\n\t\tjson.listFields.forEach( (propOriginal, i) => {\r\n\t\t\tlet prop = Object.assign({}, propOriginal);\r\n\t\t\tjson.properties[prop.fieldName] = prop;\r\n\t\t\tif(prop.booleanRequired) {\r\n\t\t\t\tjson.required.push(prop.fieldName);\r\n\t\t\t}\r\n\t\t\tdelete prop.fieldName;\r\n\t\t\tif(prop.type==='date') {\r\n\t\t\t\tprop.type = 'string';\r\n\t\t\t\tprop.format = 'date';\r\n\t\t\t} else if(prop.type==='enum') {\r\n\t\t\t\tdelete prop.type;\r\n\t\t\t\tprop.enum = [];\r\n\t\t\t\tif(prop.enumValues) {\r\n\t\t\t\t\t//console.log('prop.enumValues', prop.enumValues);\r\n\t\t\t\t\tprop.enumValues.split(',').forEach(\r\n\t\t\t\t\t\t(s) => {\r\n\t\t\t\t\t\t\tprop.enum.push(s.trim());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tdelete prop.enumValues;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tdelete json.listFields;\r\n\t\tconsole.log('transformToSave', json);\r\n\t\treturn json\r\n\t}\r\n\r\n\tadaptFormDefinition = (jsonOriginal, type) => {\r\n\t\tif(!jsonOriginal) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t\tif(type!=='FORM') {\r\n\t\t\treturn jsonOriginal;\r\n\t\t}\r\n\t\tlet json = Object.assign({},jsonOriginal);\r\n\t\t// transform 'listFields' to 'properties'\r\n\t\tif(!json.properties) {\r\n\t\t\treturn json;\r\n\t\t}\r\n\t\tjson.listFields = [];\r\n\t\tObject.getOwnPropertyNames(json.properties).forEach( (v, i) => {\r\n\t\t\tlet prop = json.properties[v];\r\n\t\t\tprop.fieldName = v;\r\n\t\t\tif(prop.format==='date') {\r\n\t\t\t\tprop.type = 'date';\r\n\t\t\t\tdelete prop.format;\r\n\t\t\t} else if(prop.enum) {\r\n\t\t\t\tprop.type = 'enum';\r\n\t\t\t\tprop.enumValues = prop.enum.join(', ');\r\n\t\t\t\tdelete prop.enum;\r\n\t\t\t}\r\n\t\t\tif(json.required && json.required.includes(v)) {\r\n\t\t\t\tprop.booleanRequired = true;\r\n\t\t\t}\r\n\t\t\tjson.listFields.push(prop);\r\n\t\t});\r\n\t\tdelete json.properties;\r\n\t\tconsole.log('adaptFormDefinition', jsonOriginal, json);\r\n\t\treturn json\r\n\t}\r\n\r\n    onError = (e) => {\r\n\t\tthis.showWarn(`Problem with a form? \r\n\t\t\t${(e && e[0] && e[0].stack)? e[0].stack : ''}` );\r\n\t\tconsole.log('Form error', e);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \trender() {\r\n\r\n\t\treturn ( <div className=\"px-2\" >\r\n\r\n\t\t\t<AutoFocusAlert alert={this.state.alert} alertVariant={this.state.alertVariant} >\r\n\t\t\t</AutoFocusAlert>\r\n\r\n\t\t\t{ this.state.ready &&\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<InputGroup.Text id=\"fieldLabel-id\">Unique ID</InputGroup.Text>\r\n\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\t\tname=\"id\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.id}\r\n\t\t\t\t\t\t\t\tplaceholder=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleFormChange}\r\n\t\t\t\t\t\t\t\taria-describedby=\"fieldLabel-id\"\r\n\t\t\t\t\t\t\t\tdisabled={Boolean(this.idReadOnly)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputGroup>\r\n\r\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Prepend> \r\n\t\t\t\t\t\t\t<InputGroup.Text id=\"fieldLabel-type\">Type</InputGroup.Text>\r\n\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\t\tname=\"type\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.type}\r\n\t\t\t\t\t\t\t\taria-describedby=\"fieldLabel-type\"\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputGroup>\r\n\r\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<InputGroup.Text id=\"fieldLabel-description\">Description</InputGroup.Text>\r\n\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.description? this.state.description : ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"describe your form\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleFormChange}\r\n\t\t\t\t\t\t\t\taria-describedby=\"fieldLabel-description\" />\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<div className=\"px-2\" >\r\n\t\t\t\t\t\t<DynamicFormChild schema={this.state.schema}\r\n\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\tonError={this.onError} \r\n\t\t\t\t\t\t\t\tformData={this.dataForRJSF}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</DynamicFormChild>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t{this.state.dataToSave && \r\n\t\t\t\t\t\t<div className=\"py-2\" >\r\n\t\t\t\t\t\t\t<div>View JSON data</div>\r\n\t\t\t\t\t\t\t<ReactJson displayDataTypes={false} src={this.state.dataToSave} collapsed=\"true\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</>\r\n\t\t\t}\t\r\n\t\t</div>);\r\n \t}\r\n\r\n};\r\nexport default EditCustomForm;\r\n","import React, { PureComponent } from \"react\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport ConfirmModal from '../Modal/ConfirmModal';\r\nimport ViewItem   from './ViewItem.js';\r\nimport icons from 'glyphicons';\r\nimport { findItems, deleteItemById, getTimeStamp } from '../../service/data-service';\r\nimport EditAsRawJson from '../EditRawJson/EditRawJson';\r\nimport EditCustomForm from '../DynamicForm/EditCustomForm';\r\n\r\nclass ManageList extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t\talert : 'Please wait...',\r\n\t\talertVariant : 'info'\r\n\t};\r\n  }\r\n\r\n  componentDidMount() {\r\n\tthis.refresh('');\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n\tif(prevProps.filter!== this.props.filter) {\r\n\t  this.refresh('');\r\n\t}\r\n  }\r\n\r\n\r\n\r\n  refresh = (msg) => {\r\n\tfindItems(this.props.filter).then(\r\n\t\t(data) => {\r\n\t\t\tdata = data.sort( (a,b) => a.id.localeCompare(b.id));\r\n\t\t\tthis.setState( {\r\n\t\t\t\tdata : data\r\n\t\t\t});\r\n\t\t\tthis.showSuccess(`${msg? msg : ''} ${data.length} element(s) found.`);\r\n\t\t\tif(this.props.notifyResultList) {\r\n\t\t\t\tthis.props.notifyResultList(data);\r\n\t\t\t}\r\n\t\t}, \r\n\t\t(err) => {\r\n\t\t\tthis.showError('Error while loading : ' +err);\r\n\t\t}\r\n\t);\r\n  };\r\n\r\n\r\n  askConfirmDelete = (itemToDelete) => {\r\n\t  console.log('delete item', itemToDelete);\r\n\t  this.setState({\r\n\t\t  itemToDelete });\r\n  };\r\n\r\n  confirmDelete = async () => {\r\n\tlet itemToDelete = this.state.itemToDelete;\r\n\tthis.setState({\r\n\t\t  itemToDelete : null });\r\n\ttry {\r\n\t\tlet res = await deleteItemById(itemToDelete);\r\n\t\tconsole.log('delete result', res);\r\n\t\tthis.refresh('Deleted '+itemToDelete+\". \");\r\n\r\n\t} catch(err) {\r\n\t\tthis.showError('Error while deleting : ' +err);\r\n\t}\r\n\t\r\n\r\n  };\r\n\r\n  cancelDelete = () => {\r\n\tthis.setState({\r\n\t\t  itemToDelete : null });\r\n  };\r\n\r\n\r\n  ViewItem = (itemToShow) => {\r\n\t  console.log('itemToShow', itemToShow);\r\n\t  this.setState({\r\n\t\t  itemToShow });\r\n  };\r\n\r\n\r\n  editCustomForm = (param) => {\r\n\t  this.setState({\r\n\t\t  customFormParam : param });\r\n  };\r\n\r\n  editRawJson = (item) => {\r\n\t  this.setState({\r\n\t\t  itemToEditAsRawJson : item,\r\n\t  });\r\n  };\r\n\r\n\r\n  needRefresh = false;\r\n\r\n  notifyRefresh = () => { this.needRefresh=true; };\r\n  conditionalRefresh = () => { \r\n\t  if(this.needRefresh) { this.refresh(); this.needRefresh=false; } \r\n  };\r\n\r\n  // find icons in \\node_modules\\glyphicons\\glyphicons.js\r\n\r\n\tshowError = (err) => {\r\n\t\t\tthis.setState({ alert: err, alertVariant : 'danger'});\r\n\t};\r\n\tshowWarn = (msg) => {\r\n\t\t\tthis.setState({ alert: msg, alertVariant : 'warning' });\r\n\t};\r\n\tshowSuccess = (msg) => {\r\n\t\t\tthis.setState({ alert: msg, alertVariant : 'success', ready : true});\r\n\t};\r\n\tshowInfo = (msg) => {\r\n\t\t\tthis.setState({  alert: msg, alertVariant : 'info' });\r\n\t};\r\n\r\n\r\n\r\n  render() {\r\n\tconsole.log('ManageList render ', this.props.filter);\r\n    return (\r\n\t<div className=\"py-2\">\r\n\r\n\t\t\t{ this.state.alert &&\r\n\t\t\t\t<Alert variant={this.state.alertVariant} >\r\n\t\t\t\t\t{this.state.alert}\r\n\t\t\t\t</Alert>\r\n\t\t\t}\r\n\r\n\t\t<ConfirmModal show={Boolean(this.state.itemToDelete)} \r\n\t\t\thandleConfirm={this.confirmDelete} handleClose={this.cancelDelete} >\r\n\t\t\t<p>\r\n\t\t\t\tDo you want to delete the item ID {this.setState.itemToDelete} ?\r\n\t\t\t</p>\r\n\t\t</ConfirmModal>\r\n  \t\t\r\n\t\t{this.state.itemToShow && \r\n\t\t\t<ConfirmModal show={Boolean(this.state.itemToShow)} \r\n\t\t\t\ttitle={`View Item ID ${this.state.itemToShow}`}\r\n\t\t\t\thandleClose={() => { this.setState({itemToShow : null}); }} >\r\n\t\t\t\t<ViewItem item={this.state.itemToShow} />\r\n\t\t\t</ConfirmModal>\r\n\t\t}\r\n\r\n\t\t{this.state.itemToEditAsRawJson &&\r\n\t\t\t<ConfirmModal show={Boolean(this.state.itemToEditAsRawJson)} \r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\ttitle={`Edit ${this.state.itemToEditAsRawJson.type} ID ${this.state.itemToEditAsRawJson.id} (as raw json)`}\r\n\t\t\t\thandleClose={() => { \r\n\t\t\t\t\tthis.conditionalRefresh();\r\n\t\t\t\t\tthis.setState({itemToEditAsRawJson : null}); }} >\r\n\t\t\t\t<EditAsRawJson itemId={this.state.itemToEditAsRawJson.id} callbackRefresh={this.notifyRefresh} />\r\n\t\t\t</ConfirmModal>\r\n\t\t}\r\n\r\n\t\t{this.state.customFormParam && \r\n\t\t\t<ConfirmModal show={Boolean(this.state.customFormParam)} \r\n\t\t\t\tsize=\"xl\"\r\n\t\t\t\ttitle={this.state.customFormParam.id? `Edit item ID ${this.state.customFormParam.id}` \r\n\t\t\t\t\t\t\t:  `Create a new object ${this.state.customFormParam.form}`  }\r\n\t\t\t\thandleClose={() => { \r\n\t\t\t\t\tthis.conditionalRefresh(); \r\n\t\t\t\t\tthis.setState({customFormParam : null}); }} >\r\n\t\t\t\t<EditCustomForm param={this.state.customFormParam} \r\n\t\t\t\t\tcallbackRefresh={this.state.customFormParam.form? null : this.notifyRefresh} />\r\n\t\t\t</ConfirmModal>\r\n  \t\t}\r\n\r\n\t\t{ this.state.data && \r\n\t\t<Table striped bordered hover size=\"sm\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t<th>ID</th>\r\n\t\t\t\t\r\n\t\t\t\t{ this.props.showType &&\r\n\t\t\t\t\t<th>Type (Form ID)</th>\r\n  \t\t\t\t}\r\n\t\t\t\t<th>Description</th>\r\n\t\t\t\t<th>Custom form</th>\r\n\t\t\t\t<th>Simple actions</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t{this.state.data.map((item) =>\r\n\t\t\t\t<tr key={item.id} >\r\n\t\t\t\t\t<td>{item.id}</td>\r\n\t\t\t\t\t{ this.props.showType &&\r\n\t\t\t\t\t\t<th>{item.type}</th>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<td>{item.description}</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t{ (item.type==='FORM') &&\r\n\t\t\t\t\t\t\t<button onClick={() => this.editCustomForm({\r\n\t\t\t\t\t\t\t\t\t\tform : item.id, \r\n\t\t\t\t\t\t\t\t\t\tsuggestedId : `${item.id}_${getTimeStamp()}`})} \r\n\t\t\t\t\t\t\t\ttitle={`New instance from the form ${item.id}`}   >\r\n\t\t\t\t\t\t\t\t{icons.plus}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{ (item.type==='FORM') &&\r\n\t\t\t\t\t\t\t<button onClick={() => this.editCustomForm({id : item.id })} title={`Edit the form definition ${item.id}`}   >\r\n\t\t\t\t\t\t\t\t{icons.gear}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{ (item.type!=='FORM') &&\r\n\t\t\t\t\t\t\t<button onClick={() => this.editCustomForm({id : item.id})} title={`Edit the object ${item.id} with the form ${item.type}`}  >\r\n\t\t\t\t\t\t\t\t{icons.memo}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td >\r\n\t\t\t\t\t\t<button onClick={() => this.editRawJson(item) } title=\"Edit raw json\" >\r\n\t\t\t\t\t\t\t{icons.pencil}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={() => this.ViewItem(item.id)} title=\"View raw json\"  >\r\n\t\t\t\t\t\t\t{icons.magnifyingGlass}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={() => this.askConfirmDelete(item.id)} title=\"Delete\" >\r\n\t\t\t\t\t\t\t{icons.wastebasket}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)}\r\n\t\t\t</tbody>\r\n\t\t</Table>\t\t\r\n  \t\t}\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default ManageList;","var movie = {\r\n\tform : 'FORM',\r\n\tsuggestedId : 'MOVIE',\r\n\tinitialDescription : 'Use this form to create a movie',\r\n\tinitialData : {\r\n\t\ttitle : 'A movie !',\r\n\t\trequired: [\"movieTitle\"],\r\n\t\tproperties : {\r\n\t\t\tmovieTitle : {\r\n\t\t\t\ttype : 'string',\r\n\t\t\t\ttitle : 'Movie title'\r\n\t\t\t},\r\n\t\t\tmovieGenre : {\r\n\t\t\t\ttype : 'enum',\r\n\t\t\t\tenumValues : 'Horror, Comedy, Drama, Avenger, Sci-fi',\r\n\t\t\t\ttitle : 'Genre'\r\n\t\t\t},\r\n\t\t\tmainActors : {\r\n\t\t\t\ttype : 'string',\r\n\t\t\t\ttitle : 'Main actors'\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n};\r\n\r\nvar todo = {\r\n\tform : 'FORM',\r\n\tsuggestedId : 'TODO_ITEM',\r\n\tinitialDescription : 'Use this form to create a TODO list',\r\n\tinitialData : {\r\n\t\ttitle: \"A task to do\",\r\n\t\ttype: \"object\",\r\n\t\trequired: [\"task\"],\r\n\t\tproperties: {\r\n\t\t\ttask: {type: \"string\", title: \"Task\" },\r\n\t\t\tdone: {type: \"boolean\", title: \"Done?\" }\r\n\t\t}\r\n\t}\r\n};\r\n\r\nvar contact = {\r\n\tform : 'FORM',\r\n\tsuggestedId : 'CONTACT',\r\n\tinitialDescription : 'Use this form to create a contact',\r\n\tinitialData : {\r\n\t\t\"title\": \"My contact\",\r\n\t\t\"type\": \"object\",\r\n\t\t\"required\": [\r\n\t\t\t\"firstName\",\r\n\t\t\t\"lastName\"\r\n\t\t],\r\n\t\t\"properties\": {\r\n\t\t\t\"firstName\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"title\": \"First name\",\r\n\t\t\t\"default\": \"Chuck\"\r\n\t\t\t},\r\n\t\t\t\"lastName\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"title\": \"Last name\"\r\n\t\t\t},\r\n\t\t\t\"telephone\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"title\": \"Telephone\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nvar shopping = {\r\n\tform : 'FORM',\r\n\tsuggestedId : 'SHOPPING_ITEM',\r\n\tinitialDescription : 'Use this form to create a shopping list',\r\n\tinitialData : {\r\n\t\ttitle: \"What I need to buy\",\r\n\t\ttype: \"object\",\r\n\t\trequired: [\"item\"],\r\n\t\tproperties: {\r\n\t\t\titem: {type: \"string\", title: \"Shopping item\" },\r\n\t\t\tquantity: {type: \"integer\", title: \"Quantity\" }\r\n\t\t}\r\n\t}\r\n};\r\n\r\nvar formCatalog = [ movie, todo, contact, shopping  ];\r\nvar index = 0;\r\n\r\nexport default function formCatalogRandom() {\r\n\treturn formCatalog[index++ % formCatalog.length];\r\n}\r\n\r\n","import React, { PureComponent } from \"react\";\r\nimport icons from 'glyphicons';\r\nimport ManageList from '../ManageData/ManageList';\r\nimport ConfirmModal from '../Modal/ConfirmModal';\r\nimport EditCustomForm from '../DynamicForm/EditCustomForm';\r\nimport formCatalogRandom from './formCatalog';\r\n\r\nclass ManageForms extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { };\r\n    this.refreshCount=1;\r\n  }\r\n\r\n  createForm = () => {\r\n\t  this.setState({\r\n      customFormParam : formCatalogRandom()\r\n    })\r\n  };\r\n  \r\n\r\n  closeCreationModal = () => {\r\n\t  this.setState({customFormParam : null}); \r\n  }\r\n\r\n  notifyRefresh = ()=> {\r\n\t  // force refresh.\r\n\t  this.refreshCount++;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (   \r\n      <div className=\"px-2\" >\r\n\r\n\r\n        {this.state.customFormParam && \r\n          <ConfirmModal show={Boolean(this.state.customFormParam)} \r\n            size=\"xl\"\r\n            title={`Create a new form`}\r\n            handleClose={this.closeCreationModal} >\r\n            <EditCustomForm param={this.state.customFormParam} callbackRefresh={this.notifyRefresh} />\r\n          </ConfirmModal>\r\n        }\r\n\r\n        <ManageList filter={`type=FORM&refreshCount=${this.refreshCount}`} />\r\n        \r\n        New form : \r\n                <span className=\"px-2\" >\r\n                  <button onClick={this.createForm} >\r\n                    {icons.plus}\r\n                  </button>\r\n                </span>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default ManageForms;","import React, { PureComponent } from \"react\";\r\nimport icons from 'glyphicons';\r\nimport ManageList from './ManageList';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { findItems, getTimeStamp } from '../../service/data-service';\r\nimport ConfirmModal from '../Modal/ConfirmModal';\r\nimport EditCustomForm from '../DynamicForm/EditCustomForm';\r\n\r\nclass ManageData extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t\tselectedIndex : null,\r\n\t    formList : []\r\n\t};\r\n\tthis.refreshCount=1;\r\n  }\r\n  \r\n  componentDidMount() {\r\n\tthis.refresh();\r\n  }  \r\n\r\n  refresh = () => {\r\n\tfindItems(\"type=FORM\").then(\r\n\t\t(data) => {\r\n\t\t\tdata = data.sort( (a,b) => a.id.localeCompare(b.id));\r\n\t\t\tthis.setState( {\r\n\t\t\t\tformList : data,\r\n\t\t\t\terror : ''\r\n\t\t\t});\r\n\t\t}, \r\n\t\t(err) => {\r\n\t\t\tthis.setState( {\r\n\t\t\t\terror : 'Error while loading : ' +err\r\n\t\t\t});\r\n\t\t}\r\n\t);\r\n  };\r\n\r\n  select = (ev) => {\r\n\t  let i = ev.target.getAttribute('data-index');\r\n\t  if(i === undefined) {\r\n\t\t  i = null;\r\n\t  }\r\n\t  this.setState({selectedIndex : i});\r\n  };\r\n\r\n  editCustomForm = () => {\r\n\t  this.setState({\r\n\t\t  customFormParam : {\r\n\t\t\t  form : this.getSelectedForm().id,\r\n\t\t\t  suggestedId : `${this.getSelectedForm().id}_${getTimeStamp()}`\r\n\t\t  } });\r\n  };\r\n  \r\n  getSelectedForm = () => {\r\n\tif(!this.state.selectedIndex) {\r\n\t\treturn null;\r\n\t}\r\n\treturn this.state.formList[this.state.selectedIndex];\r\n  };\r\n\r\n  closeCreationModal = () => {\r\n\tthis.setState({customFormParam : null}); \r\n  }\r\n\r\n  notifyRefresh = ()=> {\r\n\t  // force refresh.\r\n\t  this.refreshCount++;\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n\t  <div className=\"px-2\" >\r\n\r\n\r\n\t\t{this.state.customFormParam && \r\n\t\t\t<ConfirmModal show={Boolean(this.state.customFormParam)} \r\n\t\t\t\tsize=\"xl\"\r\n\t\t\t\ttitle={this.state.customFormParam.id? `Edit item ID ${this.state.customFormParam.id}` \r\n\t\t\t\t\t\t\t:  `Create a new object ${this.state.customFormParam.form}`  }\r\n\t\t\t\thandleClose={this.closeCreationModal} >\r\n\t\t\t\t<EditCustomForm param={this.state.customFormParam} callbackRefresh={this.notifyRefresh} />\r\n\t\t\t</ConfirmModal>\r\n\t\t}\r\n\t\t\r\n\t\t<Dropdown className=\"px-2\">\r\n\t\t<Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n\t\t\tFilter by an object type\r\n\t\t</Dropdown.Toggle>\r\n\r\n\t\t<Dropdown.Menu>\r\n\t\t\t<Dropdown.Item href=\"#\" onClick={this.select} \r\n\t\t\t\tkey=\"all\" ><b>All data</b></Dropdown.Item>\r\n\t\t\t{ this.state.formList.map ( (v,index) => \r\n\t\t\t<Dropdown.Item href=\"#\" onClick={this.select} \r\n\t\t\t\tkey={v.id} data-index={index}>{`${v.id} - ${v.description}`}</Dropdown.Item>\r\n\t\t\t)}\r\n\t\t</Dropdown.Menu>\r\n\t\t</Dropdown>\r\n\r\n\t\t<ManageList\r\n\t\t\t filter={this.state.selectedIndex? \r\n\t\t\t\t\t`type=${this.state.formList[this.state.selectedIndex].id}&refreshCount=${this.refreshCount}` : \r\n\t\t\t\t\t`type=FORM&opposite=true&refreshCount=${this.refreshCount}`} \r\n\t\t\t showType=\"true\" />\r\n\r\n\t\t\r\n      \r\n          New instance \r\n\t\t\t\t{this.state.selectedIndex && \r\n\t\t  \t\t\t` of ${this.state.formList[this.state.selectedIndex].id} `\r\n  \t\t\t\t}\r\n\t\t\t\t: \r\n                <span className=\"px-2\" >\r\n\t\t\t\t  { this.state.selectedIndex?\r\n\t\t\t\t\t<button onClick={this.editCustomForm} >\r\n\t\t\t\t\t\t{icons.plus}\r\n\t\t\t\t\t</button> :\r\n\t\t\t\t\t<span style={ {color:'grey'} } >\r\n\t\t\t\t\t\tChoose a type to create an instance.\r\n\t\t\t\t\t</span>\r\n\t\t\t\t  }\r\n                </span>\r\n        </div>\r\n\r\n    );\r\n  }\r\n};\r\nexport default ManageData;","const myData =\r\n\t{ \"shows\": [\r\n\t\t{ \"objectContent\": { \"title\": \"AVENGERS: ENDGAME\", \"genre\": \"Action\", \"boxofficeRating\": 2798 },\r\n\t\t  \"objectType\" : \"Movie\"\r\n\t\t},\r\n\r\n\t\t{ \"objectContent\": { \r\n\t\t\t\"seasons\": [\r\n\t\t\t\t{ \"no\": 1, \"numEpisodes\": 11, \"releaseDate\": \"2018-10-26\" },\r\n\t\t\t\t{ \"no\": 2, \"numEpisodes\": 9, \"releaseDate\": \"2019-04-05\" }], \r\n\t\t\t\"title\": \"Chilling Adventures of Sabrina\" \r\n\t\t   }, \r\n\t\t   \"objectType\": \"Series\" \r\n\t\t}\r\n\t] \r\n\t};\r\n\r\nexport default myData;","import React from \"react\";\r\nimport Form from \"@rjsf/core\";\r\nimport myData from './data.js';\r\n\r\nexport default function JsonFormExample(props) {\r\n\r\n\t/*\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setValue('hello');\r\n  }; */\r\n\r\n\r\n\r\n\tconst schema = {\r\n\t\ttitle: \"Netflix program\",\r\n\t\ttype: \"object\",\r\n\t\t\"definitions\": {\r\n\t\t\t\"Movie\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"title\" : \"\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"title\" : { type : \"string\", title : \"Movie title\" },\r\n\t\t\t\t\t\"genre\": { enum : [\"Horror\", \"Comedy\", \"Adventure\", \"Triller\", \"Action\"], title : \"Genre\" },\r\n\t\t\t\t\t\"boxofficeRating\": { type : \"integer\", title : \"Box Office Rating in $\"},\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"Series\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"title\" : \"\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"title\" : { type : \"string\", title : \"Series title\" },\r\n\t\t\t\t\t\"seasons\": {\r\n\t\t\t\t\t\ttype : \"array\",\r\n\t\t\t\t\t\titems : {\r\n\t\t\t\t\t\t\tproperties : {\r\n\t\t\t\t\t\t\t\tno : { type : \"integer\", title : \"Season number\" },\r\n\t\t\t\t\t\t\t\treleaseDate : { type : \"string\", format : \"date\", title : \"Release date\" },\r\n\t\t\t\t\t\t\t\tnumEpisodes : { type : \"integer\", title : \"Number of episodes\" },\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"properties\": {\r\n\t\t\t\"shows\" : {\r\n\t\t\t\t\"title\" : \"\",\r\n\t\t\t\t\"type\" : \"array\",\r\n\t\t\t\t\"items\" : {\r\n\t\t\t\t\t\"properties\" : {\r\n\t\t\t\t\t\t\"objectType\": {\r\n\t\t\t\t\t\t\t\"title\" : \"Movie or Series\",\r\n\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\"enum\": [\r\n\t\t\t\t\t\t\t\t\"Movie\",\r\n\t\t\t\t\t\t\t\t\"Series\",\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"dependencies\": {\r\n\t\t\t\t\t\t\"objectType\": {\r\n\t\t\t\t\t\t\t\"oneOf\": [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"objectType\": {\"enum\": [\"Movie\"]},\r\n\t\t\t\t\t\t\t\t\t\t\"objectContent\" : {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Movie\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"objectType\": {\"enum\": [\"Series\"]},\r\n\t\t\t\t\t\t\t\t\t\t\"objectContent\" : {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Series\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\t  console.log('submit', data);\r\n\t  console.log(JSON.stringify(data.formData));\r\n\t  \r\n\t  //console.log('myData', myData);\r\n  }\r\n  const onError = (data) => console.error('error', data);\r\n\r\n  return (\r\n   <div className=\"px-2\" >\r\n  \t\t<Form schema={schema}\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t\tonError={onError} \r\n\t\t\tformData={myData}\r\n\t\t\t/>\r\n\r\n      </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport SimpleMenu   from './menu/SimpleMenu';\nimport FormatJson   from './demo/FormatJson/FormatJson';\nimport ManageForms    from './demo/ManageForms/ManageForms';\nimport ManageData    from './demo/ManageData/ManageData';\nimport JsonFormExample     from './demo/DynamicForm/JsonFormExample';\n\n\n//import dataLoaderAndFilter from \"./dataLoaderAndFilter\";\n\n\nexport default function App(props) {\n\n\n    return (\n      <div>\n\n      <Router>\n\n        <SimpleMenu selectedMenu={''} >\n        </SimpleMenu>\n\n        <hr/>\n        \n        <Switch>\n          <Route path=\"/FormatJson\">\n            <FormatJson />\n          </Route>\n          <Route path=\"/ManageForms\">\n            <ManageForms />\n          </Route>\n          <Route path=\"/ManageData\">\n            <ManageData  />\n          </Route>\n          <Route path=\"/JsonFormExample\">\n            <JsonFormExample />\n          </Route>\n          <Route path=\"/\">\n            <h1>Please select a menu</h1>\n          </Route>\n        </Switch>\n      </Router>\n\n      </div>\n      \n    );\n  \n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'glyphicons-only-bootstrap/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}